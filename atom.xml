<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zengkuner</title>
  
  <subtitle>好记性不如烂笔头！</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-02T05:59:04.100Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>zengkuner</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>react父子组件通信</title>
    <link href="http://example.com/2021/09/01/react/react%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/"/>
    <id>http://example.com/2021/09/01/react/react%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/</id>
    <published>2021-09-01T09:52:30.000Z</published>
    <updated>2021-09-02T05:59:04.100Z</updated>
    
    <content type="html"><![CDATA[<h2 id="react父子组件通信方式"><a href="#react父子组件通信方式" class="headerlink" title="react父子组件通信方式"></a>react父子组件通信方式</h2><h3 id="子组件向父组件传参"><a href="#子组件向父组件传参" class="headerlink" title="子组件向父组件传参"></a>子组件向父组件传参</h3><h4 id="场景一"><a href="#场景一" class="headerlink" title="场景一"></a>场景一</h4><ol><li>业务场景：父页面进行多选课程，并能选择分类，不同分类下展示相应的可选课程，点击请选择分类跳转至子页面进行分类级联选择。</li><li>交互功能：<ul><li>当子页面选择好想选的分类时，点击确定按钮将这个分类的唯一id及分类名称传递给父页面。另外，父页面收到分类id时需要将这个id作为请求接口函数的参数触发请求。</li><li>级联分类选择需要保存历史选择记录，例如假设一共有三层，选到第二层时，返回到父页面，此时再跳转到子页面时还要显示之前选择过的状态。</li><li>综上：子页面中，点击头部导航栏的返回按钮向父页面传递保留选择历史的level（树形结构的子集）；当点击确定按钮时，向父页面传递最后选中的分类名称和分类id，以及level（点击确定按钮后也会跳转到父页面，故也要把level传过去）。</li></ul></li><li>解决方案：<br> <strong>父页面中</strong><ul><li>假设父页面为AddMicrolecture.tsx，子页面为courseClassify.tsx，父页面的子组件标签为<code>&lt;CourseClassify/&gt;</code>。</li><li>首先在父页面定义两个函数，其中一个如下，第二个函数直接定义在子组件标签中。<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 接受两个参数，第一个参数data表示要接受的分类id，</span></span><br><span class="line"><span class="comment">// 第二个参数表示保存的历史选择数据，这两个参数都需要子组件传递过来.</span></span><br><span class="line"><span class="keyword">const</span> callBackFun = <span class="function">(<span class="params">data: <span class="built_in">any</span>, level: <span class="built_in">any</span>[]</span>) =&gt;</span> &#123;</span><br><span class="line">  setShowClassify(<span class="literal">false</span>); <span class="comment">// 子组件调用这个函数时跳转到父页面，设置为false</span></span><br><span class="line">  getData(<span class="string">&#x27;&#x27;</span>, <span class="literal">true</span>, <span class="number">1</span>, data);</span><br><span class="line">  setCategory(level) <span class="comment">// 保存这个level，再传给子组件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>把这个两个函数传递给子组件，由子组件调用执行。<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;CourseClassify</span><br><span class="line">  <span class="comment">// 参数data表示分类名称，需要子组件调用这个函数然后将参数传递过来</span></span><br><span class="line">  categoryName=&#123;<span class="function">(<span class="params">data: <span class="built_in">string</span></span>) =&gt;</span> &#123; setCategoryName(data); &#125;&#125;</span><br><span class="line">  callBackFun=&#123;<span class="function">(<span class="params">data?: <span class="built_in">string</span>, level?: <span class="built_in">any</span>[]</span>) =&gt;</span> callBackFun(data, level)&#125;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><strong>子页面中</strong></li><li>子组件中声明函数类型：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> IProps &#123;</span><br><span class="line">  <span class="attr">categoryName</span>: <span class="function">(<span class="params">data: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span></span><br><span class="line">  <span class="attr">callBackFun</span>: <span class="function">(<span class="params">data?: <span class="built_in">string</span>, level?: <span class="built_in">any</span>[]</span>) =&gt;</span> <span class="built_in">void</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>点击确定按钮调用confirm方法，在这个方法中调用父组件中传过来的两个函数。<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> confirm = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (isConfirm) &#123;</span><br><span class="line">    <span class="keyword">const</span> categoryId = level[level.length - <span class="number">1</span>].id;</span><br><span class="line">    <span class="keyword">const</span> categoryName = level[level.length - <span class="number">1</span>].name;</span><br><span class="line">    <span class="comment">// 调用父组件传过来的函数，并执行</span></span><br><span class="line">    props.categoryName(categoryName);</span><br><span class="line">    props.callBackFun(categoryId, level);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>点击导航栏返回按钮，只要把level传过去并执行父组件的callBackFun函数。<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Navbar title=<span class="string">&quot;请选择课程分类&quot;</span> onLeftClick=&#123;<span class="function">() =&gt;</span> props.callBackFun(<span class="string">&#x27;&#x27;</span>,level)&#125;&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="父组件向子组件传参"><a href="#父组件向子组件传参" class="headerlink" title="父组件向子组件传参"></a>父组件向子组件传参</h3><h4 id="场景一：传递简单数据。"><a href="#场景一：传递简单数据。" class="headerlink" title="场景一：传递简单数据。"></a>场景一：传递简单数据。</h4><ol><li>父页面中：把category传过去<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;CourseClassify</span><br><span class="line">  category=&#123;category&#125;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure></li><li>子页面中接收：<ul><li>首先在子组件中声明数据类型。<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> IProps &#123;</span><br><span class="line">  <span class="attr">category</span>: <span class="built_in">any</span>[]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>然后通过<code>props.category</code>使用。</li></ul></li></ol><h4 id="场景二：传递函数。"><a href="#场景二：传递函数。" class="headerlink" title="场景二：传递函数。"></a>场景二：传递函数。</h4><ol><li>业务说明：子页面进行添加或删除操作后，父组件要展示一条有修改信息的提醒。</li><li>解决方案：只需要在子组件的确认删除处和确认添加处做好标记，然后把标记传递给父组件。</li><li>父页面index.tsx，子组件标签为<code>&lt;MaterialList/&gt;</code><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [isDeleteIfo, setIsDeleteInfo] = useState(<span class="literal">false</span>) <span class="comment">// 为true时，即表示信息被修改。</span></span><br><span class="line"></span><br><span class="line">&lt;MaterialList</span><br><span class="line">  bookIsChange=&#123;<span class="function">() =&gt;</span> &#123; setIsDeleteInfo(<span class="literal">true</span>) &#125;&#125;</span><br><span class="line">  /&gt;</span><br></pre></td></tr></table></figure></li><li>子组件中：<ul><li>声明：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> IProps &#123;</span><br><span class="line">  <span class="attr">bookIsChange</span>: <span class="built_in">any</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>确认删除：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">delete</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  props.bookIsChange();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;react父子组件通信方式&quot;&gt;&lt;a href=&quot;#react父子组件通信方式&quot; class=&quot;headerlink&quot; title=&quot;react父子组件通信方式&quot;&gt;&lt;/a&gt;react父子组件通信方式&lt;/h2&gt;&lt;h3 id=&quot;子组件向父组件传参&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="react" scheme="http://example.com/categories/react/"/>
    
    
  </entry>
  
  <entry>
    <title>函数和类型推断</title>
    <link href="http://example.com/2021/08/29/typescript/%E5%87%BD%E6%95%B0%E5%92%8C%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD/"/>
    <id>http://example.com/2021/08/29/typescript/%E5%87%BD%E6%95%B0%E5%92%8C%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD/</id>
    <published>2021-08-29T03:30:12.000Z</published>
    <updated>2021-08-31T11:56:36.256Z</updated>
    
    <content type="html"><![CDATA[<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数声明"><a href="#函数声明" class="headerlink" title="函数声明"></a>函数声明</h3><ol><li>定义一个有两个参数的函数，参数类型为number，返回值类型为number。<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span></span>):  <span class="title">number</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>将以上函数赋值给变量result，result会自动解析为number类型。<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> result = add(<span class="number">2</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure></li></ol><h3 id="函数的可选参数"><a href="#函数的可选参数" class="headerlink" title="函数的可选参数"></a>函数的可选参数</h3><ol><li>实现可选参数：在变量后加上一个?，表示该参数可选。<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span>, z?: <span class="built_in">number</span></span>):  <span class="title">number</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> z === <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y + z;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>正确示例：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> result = add(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">let</span> result = add(<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>);</span><br></pre></td></tr></table></figure></blockquote></li><li>可选参数之后不能再加上一个确定参数，可选参数只能放在最后面。  <blockquote><p>错误示例：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">x: <span class="built_in">number</span>, z?: <span class="built_in">number</span>, y: <span class="built_in">number</span></span>):  <span class="title">number</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote></li><li>给函数参数添加默认值，ts会将已添加默认值的参数识别为可选参数。<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span>, z: <span class="built_in">number</span> = <span class="number">10</span></span>):  <span class="title">number</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> z === <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y + z;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="给函数声明类型"><a href="#给函数声明类型" class="headerlink" title="给函数声明类型"></a>给函数声明类型</h3><ol><li>函数表达式<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> add = <span class="function"><span class="keyword">function</span> (<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span>, z: <span class="built_in">number</span> = <span class="number">10</span></span>):  <span class="title">number</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> z === <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y + z;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>给函数声明类型，其后的箭头函数跟上一个类型，表示函数返回的类型。<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> add2: <span class="function">(<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span>: z?: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">number</span> = add</span><br></pre></td></tr></table></figure></li><li>假设函数返回为空，不返回。<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> add2: <span class="function">(<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span>: z?: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">void</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="类型推断"><a href="#类型推断" class="headerlink" title="类型推断"></a>类型推断</h2><ol><li>假设将一个没有声明类型的变量赋值字符串，那么这个变量就是string类型。<br>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;str&#x27;</span>; <span class="comment">// 此时str已经为string类型了</span></span><br><span class="line">str = <span class="number">123</span>; <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h2&gt;&lt;h3 id=&quot;函数声明&quot;&gt;&lt;a href=&quot;#函数声明&quot; class=&quot;headerlink&quot; title=&quot;函数声明&quot;&gt;&lt;/a&gt;函数声明&lt;/h</summary>
      
    
    
    
    <category term="typescript" scheme="http://example.com/categories/typescript/"/>
    
    
    <category term="typescript" scheme="http://example.com/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>test-hexo</title>
    <link href="http://example.com/2021/08/01/test-hexo/"/>
    <id>http://example.com/2021/08/01/test-hexo/</id>
    <published>2021-07-31T20:12:21.000Z</published>
    <updated>2021-07-31T20:13:27.168Z</updated>
    
    
    
    
    <category term="分类1" scheme="http://example.com/categories/%E5%88%86%E7%B1%BB1/"/>
    
    <category term="分类2" scheme="http://example.com/categories/%E5%88%86%E7%B1%BB1/%E5%88%86%E7%B1%BB2/"/>
    
    
    <category term="标签1" scheme="http://example.com/tags/%E6%A0%87%E7%AD%BE1/"/>
    
    <category term="标签2" scheme="http://example.com/tags/%E6%A0%87%E7%AD%BE2/"/>
    
    <category term="标签3" scheme="http://example.com/tags/%E6%A0%87%E7%AD%BE3/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/08/01/hello-world/"/>
    <id>http://example.com/2021/08/01/hello-world/</id>
    <published>2021-07-31T19:14:21.589Z</published>
    <updated>2021-08-29T02:57:01.379Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><blockquote><p>搭建博客的详细教程 <a href="https://www.zhihu.com/question/20962496/answer/1882882782?utm_campaign=shareopn&amp;utm_content=group3_Answer&amp;utm_medium=social&amp;utm_oi=813766955784876032&amp;utm_source=wechat_session&amp;s_r=0" title="手把手教">请戳</a></p></blockquote><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
